<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team.postnatalcare.Sanhumanagement.SanhuMapper">

<!-- 유저 테이블(name), 산후관리사(num) 조회 -->
<select id="jobsearch" resultType="com.team.postnatalcare.Sanhumanagement.SanhuNameDTO">
	SELECT pos_sanhujori.num, pos_user.name, pos_sanhujori.sanhupath, pos_sanhujori.jobstate
	from pos_sanhujori 
	join pos_user 
	ON pos_sanhujori.num = pos_user.num
</select>

<select id="namesearch" resultType="com.team.postnatalcare.Sanhumanagement.SanhuNameDTO">
	SELECT pos_sanhujori.num, pos_user.name, pos_sanhujori.sanhupath
	from pos_sanhujori 
	join pos_user 
	ON pos_sanhujori.num = pos_user.num and pos_sanhujori.num = #{param1}
</select>

<!-- 산후관리사 테이블에 데이터 삽입 -->
<!-- jobstate는 초기상태 0 (0-> 고용가능, 1-> 고용중) -->
<insert id="sanhujorisave">
	insert into pos_sanhujori(sanhunum, num, sanhurecord, jobstate, content, sanhupath) values(pos_sanhu_seq.nextval, #{param1}, #{param2}, 0, #{param3}, #{param4})
</insert>
<!-- 산후관리사 테이블에 유저테이블의 num값을 가져와 데이터 삽입 -->
<!-- insert into pos_sanhujori(sanhunum, num, sanhurecord, jobstate, content)
values(pos_sanhu_seq.nextval, (SELECT num FROM pos_user WHERE num = #{param1}), 'test', 0, 'test') -->


<select id="Sanhujoriout" resultType="com.team.postnatalcare.Sanhumanagement.SanhujoriDTO">
	select * from pos_sanhujori where num = #{param1}
</select>

<!-- 유저테이블(num)과 산후관리사테이블(num)의 같은 부분 출력 -->
<!-- SELECT * FROM pos_sanhujori sa inner join pos_user us ON sa.num = us.num; -->

<insert id="sanhureviewsave">
	insert into pos_review(reviewnum, employnum, posnum, sanhunum, starpoint, ment)
	values(pos_review_seq.nextval, #{param1}, #{param2}, #{param3}, #{param4}, #{param5})
</insert>

<update id="sanhumodi">
	update pos_sanhujori SET sanhurecord = #{param1}, content = #{param2}, sanhupath = #{param3} where sanhunum = #{param4}
</update>

<insert id="sanhuemploymentsave">
	insert into POS_EMPLOY
	values(pos_employ_seq.nextval, #{param1}, #{param2}, #{param3}, #{param4})
</insert>

<select id="sanhuliout" resultType="com.team.postnatalcare.Sanhumanagement.SanhuLicenseDTO">
	select * from pos_license where sanhunum = #{param1} order by linum asc
</select>

<insert id="sanhulisave">
	insert into pos_license
	values(POS_SANHULICENSE_SEQ.nextval, #{param1}, #{param2}, #{param3})
</insert>

<delete id="sanhulidel">
	delete from pos_license where linum = #{param1}
</delete>

<update id="sanhulimodi">
	update pos_license SET liname = #{param2}, licode = #{param3} where linum = #{param1}
</update>

<select id="posnumfind" resultType="com.team.postnatalcare.Sanmo.PostnatalDTO">
	select * from POS_POSTNATAL where num = #{param1}
</select>


<select id="reviewout" resultType="com.team.postnatalcare.Sanhumanagement.SanhuReviewDTO">
	select * from POS_REVIEW where sanhunum = #{param1}
</select>

<select id="reviewavg" resultType="float">
	SELECT ROUND(AVG(starpoint),1) FROM pos_review where sanhunum = #{param1}
</select>

<update id="jobstatechange">
	update pos_sanhujori SET jobstate = #{param2} where sanhunum = #{param1}
</update>

<select id="period" resultType="com.team.postnatalcare.Sanhumanagement.SanhuEmployDTO">
	SELECT
    *
	FROM (SELECT *FROM pos_employ ORDER BY employnum DESC)
	WHERE sanhunum = #{param1} and ROWNUM= 1
</select>
</mapper>
